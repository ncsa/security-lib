/*
   A program to test try ...  catch blocks and the error handling capabilities generally.
   This just loops (so the block gets hit repeatedly) and depending on what the value of the
   loop is, an error condition may be raised. Control passes to the catch block which can
   then just select the action it wants to do, if any.
   
   Jeff Gaynor
   1/25/2020
*/
while[
   for_next(j, 5)
   ]do[
      try[
           remainder := mod(j, 5);

           if[remainder == 0]then[say('A remainder of 0 is fine.');];
           if[remainder == 4]then[say('A remainder of 4 is fine.');];
           if[remainder == 1]then[raise_error(j + ' not divisible by 5', 1);];
           if[remainder == 2]then[raise_error(j + ' not divisible by 5', 2);];
           if[remainder == 3]then[raise_error(j + ' not divisible by 5', 3);];

       ]catch[
          if[error_code == 1]then[say(error_message);];
          if[error_code == 2]then[say(error_message);];
          if[error_code == 3]then[say(error_message);];
       ]; // end catch block
       // This means that the try...catch has ended. It will be redone on the next loop
   ]; // end while